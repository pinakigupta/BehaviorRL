Logging to ./run/models/parking-v1/her/default/20190228-075457_log
T: 20
_Q_lr: 0.001
_action_l2: 1.0
_batch_size: 256
_buffer_size: 1000000
_clip_obs: 200.0
_hidden: 256
_layers: 3
_max_u: 1.0
_network_class: baselines.her.actor_critic:ActorCritic
_norm_clip: 5
_norm_eps: 0.01
_pi_lr: 0.001
_polyak: 0.95
_relative_goals: False
_scope: ddpg
aux_loss_weight: 0.0078
bc_loss: 0
ddpg_params: {'buffer_size': 1000000, 'hidden': 256, 'layers': 3, 'network_class': 'baselines.her.actor_critic:ActorCritic', 'polyak': 0.95, 'batch_size': 256, 'Q_lr': 0.001, 'pi_lr': 0.001, 'norm_eps': 0.01, 'norm_clip': 5, 'max_u': 1.0, 'action_l2': 1.0, 'clip_obs': 200.0, 'scope': 'ddpg', 'relative_goals': False}
demo_batch_size: 128
env_name: parking-v1
gamma: 0.95
make_env: <function prepare_params.<locals>.make_env at 0x7f7b8c2dd510>
n_batches: 40
n_cycles: 50
n_test_rollouts: 10
noise_eps: 0.2
num_demo: 100
prm_loss_weight: 0.001
q_filter: 0
random_eps: 0.3
replay_k: 4
replay_strategy: future
rollout_batch_size: 1
test_with_polyak: False

*** Warning ***
You are running HER with just a single MPI worker. This will work, but the experiments that we report in Plappert et al. (2018, https://arxiv.org/abs/1802.09464) were obtained with --num_cpu 19. This makes a significant difference and if you are looking to reproduce those results, be aware of this. Please also refer to https://github.com/openai/baselines/issues/314 for further details.
****************

Creating a DDPG agent with action space 2 x 1.0...
Training...
--------------------------------------
| epoch              | 0             |
| stats_g/mean       | -0.003476795  |
| stats_g/std        | 0.067473195   |
| stats_o/mean       | -0.0025742974 |
| stats_o/std        | 0.062139664   |
| test/episode       | 10.0          |
| test/mean_Q        | -4.346055     |
| test/success_rate  | 0.5           |
| train/episode      | 50.0          |
| train/success_rate | 0.0           |
--------------------------------------
--------------------------------------
| epoch              | 1             |
| stats_g/mean       | -0.0034799397 |
| stats_g/std        | 0.067477226   |
| stats_o/mean       | -0.002550191  |
| stats_o/std        | 0.062136978   |
| test/episode       | 20.0          |
| test/mean_Q        | -4.221631     |
| test/success_rate  | 0.4           |
| train/episode      | 100.0         |
| train/success_rate | 0.0           |
--------------------------------------
--------------------------------------
| epoch              | 2             |
| stats_g/mean       | -0.0033777843 |
| stats_g/std        | 0.067447156   |
| stats_o/mean       | -0.002461727  |
| stats_o/std        | 0.062105104   |
| test/episode       | 30.0          |
| test/mean_Q        | -4.181003     |
| test/success_rate  | 0.7           |
| train/episode      | 150.0         |
| train/success_rate | 0.04          |
--------------------------------------
--------------------------------------
| epoch              | 3             |
| stats_g/mean       | -0.0036081776 |
| stats_g/std        | 0.0674465     |
| stats_o/mean       | -0.0026724683 |
| stats_o/std        | 0.06211579    |
| test/episode       | 40.0          |
| test/mean_Q        | -4.5466805    |
| test/success_rate  | 0.8           |
| train/episode      | 200.0         |
| train/success_rate | 0.02          |
--------------------------------------
--------------------------------------
| epoch              | 4             |
| stats_g/mean       | -0.0036030698 |
| stats_g/std        | 0.06743896    |
| stats_o/mean       | -0.0026634268 |
| stats_o/std        | 0.062101725   |
| test/episode       | 50.0          |
| test/mean_Q        | -3.7151406    |
| test/success_rate  | 0.8           |
| train/episode      | 250.0         |
| train/success_rate | 0.02          |
--------------------------------------
--------------------------------------
| epoch              | 5             |
| stats_g/mean       | -0.003526118  |
| stats_g/std        | 0.06750963    |
| stats_o/mean       | -0.0025622863 |
| stats_o/std        | 0.06216001    |
| test/episode       | 60.0          |
| test/mean_Q        | -4.1980543    |
| test/success_rate  | 0.7           |
| train/episode      | 300.0         |
| train/success_rate | 0.04          |
--------------------------------------
--------------------------------------
| epoch              | 6             |
| stats_g/mean       | -0.0036120198 |
| stats_g/std        | 0.06751126    |
| stats_o/mean       | -0.0026563397 |
| stats_o/std        | 0.062186044   |
| test/episode       | 70.0          |
| test/mean_Q        | -4.727351     |
| test/success_rate  | 0.6           |
| train/episode      | 350.0         |
| train/success_rate | 0.0           |
--------------------------------------
--------------------------------------
| epoch              | 7             |
| stats_g/mean       | -0.003679102  |
| stats_g/std        | 0.06751046    |
| stats_o/mean       | -0.0027406772 |
| stats_o/std        | 0.062185507   |
| test/episode       | 80.0          |
| test/mean_Q        | -3.7928452    |
| test/success_rate  | 0.8           |
| train/episode      | 400.0         |
| train/success_rate | 0.02          |
--------------------------------------
--------------------------------------
| epoch              | 8             |
| stats_g/mean       | -0.0036924062 |
| stats_g/std        | 0.06750735    |
| stats_o/mean       | -0.002756658  |
| stats_o/std        | 0.062154576   |
| test/episode       | 90.0          |
| test/mean_Q        | -4.632226     |
| test/success_rate  | 0.8           |
| train/episode      | 450.0         |
| train/success_rate | 0.04          |
--------------------------------------
-------------------------------------
| epoch              | 9            |
| stats_g/mean       | -0.003762861 |
| stats_g/std        | 0.067476526  |
| stats_o/mean       | -0.002820153 |
| stats_o/std        | 0.062114786  |
| test/episode       | 100.0        |
| test/mean_Q        | -4.3595166   |
| test/success_rate  | 1.0          |
| train/episode      | 500.0        |
| train/success_rate | 0.02         |
-------------------------------------
Running trained model
